{"version":3,"sources":["models/users/User.js"],"names":["Schema","mongoose","userSchema","email","type","String","unique","password","purchases","ref","statics","generateHash","bcrypt","hashSync","genSaltSync","methods","isValidPassword","compareSync","module","exports","model"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;;;AAER,IAAME,aAAa,IAAIF,MAAJ,CAAW;AAC1BG,WAAO,EAACC,MAAMC,MAAP,EAAeC,QAAQ,IAAvB,EADmB;AAE1BC,cAAUF,MAFgB;AAG1BG,eAAW,CAAC,EAAEJ,MAAMC,MAAR,EAAgBI,KAAK,UAArB,EAAD;AAHe,CAAX,CAAnB;;AAMAP,WAAWQ,OAAX,CAAmBC,YAAnB,GAAkC,UAACJ,QAAD,EAAc;AAC5C,WAAOK,iBAAOC,QAAP,CAAgBN,QAAhB,EAA0BK,iBAAOE,WAAP,CAAmB,CAAnB,CAA1B,CAAP;AACH,CAFD;;AAIAZ,WAAWa,OAAX,CAAmBC,eAAnB;AAAA,wFAAqC,iBAAOT,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,yDAC1BK,iBAAOK,WAAP,CAAmBV,QAAnB,EAA6B,UAAKA,QAAlC,CAD0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArC;;AAAA;AAAA;AAAA;AAAA;;AAIAW,OAAOC,OAAP,GAAiBlB,mBAASmB,KAAT,CAAe,MAAf,EAAuBlB,UAAvB,CAAjB","file":"../../../models/users/User.js","sourcesContent":["import mongoose   from 'mongoose';\nimport bcrypt     from 'bcrypt';\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema({\n    email: {type: String, unique: true},\n    password: String,\n    purchases: [{ type: String, ref: 'Purchase' }]\n});\n\nuserSchema.statics.generateHash = (password) => {\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(8));\n};\n\nuserSchema.methods.isValidPassword = async (password) => {\n    return bcrypt.compareSync(password, this.password);\n};\n\nmodule.exports = mongoose.model('User', userSchema);"]}