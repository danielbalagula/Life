{"version":3,"sources":["config/redis.js"],"names":["redisLogger","RedisStore","session","client","redis","createClient","url","process","env","REDIS_URL","port","REDIS_PORT","password","REDIS_PASS","on","chalk","bgBlue","err","bgYellow","quit","bgRed","module","exports","store","secret","SESSION_SECRET","resave","saveUninitialized"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAIA,cAAc,qBAAM,QAAN,CAAlB;;AAEA,IAAMC,aAAa,4BAAaC,wBAAb,CAAnB;AACA,IAAMC,SAAaC,gBAAMC,YAAN,CAAmB;AAClCC,SAAKC,QAAQC,GAAR,CAAYC,SADiB;AAElCC,UAAMH,QAAQC,GAAR,CAAYG,UAFgB;AAGlCC,cAAUL,QAAQC,GAAR,CAAYK;AAHY,CAAnB,CAAnB;;AAMAV,OAAOW,EAAP,CAAU,OAAV,EAAmB,YAAM;AACrBd,gBAAYe,gBAAMC,MAAN,+BAAyCT,QAAQC,GAAR,CAAYC,SAArD,CAAZ;AACH,CAFD;;AAIAN,OAAOW,EAAP,CAAU,OAAV,EAAmB,UAACG,GAAD,EAAS;AACxBjB,gBAAYe,gBAAMG,QAAN,0CAAsDD,GAAtD,CAAZ;AACH,CAFD;;AAIAd,OAAOW,EAAP,CAAU,KAAV,EAAiB,YAAM;AACnBd,gBAAYe,gBAAMG,QAAN,CAAe,+BAAf,CAAZ;AACH,CAFD;;AAIAX,QAAQO,EAAR,CAAW,QAAX,EAAqB,YAAM;AACvBX,WAAOgB,IAAP;AACAnB,gBAAYe,gBAAMK,KAAN,CAAY,wDAAZ,CAAZ;AACH,CAHD;;AAKAC,OAAOC,OAAP,GAAiB,8BAAQ;AACrBC,WAAO,IAAItB,UAAJ,CAAe;AAClBE,gBAAQA;AADU,KAAf,CADc;AAIrBqB,YAAQjB,QAAQC,GAAR,CAAYiB,cAJC;AAKrBC,YAAQ,IALa;AAMrBC,uBAAmB;AANE,CAAR,CAAjB","file":"../../config/redis.js","sourcesContent":["import connectRedis      from 'connect-redis'\nimport session           from 'express-session';\nimport redis             from 'redis';\nimport debug             from 'debug';\nimport chalk             from 'chalk';\nimport                   './env';\n\nlet redisLogger = debug('redis_');\n\nconst RedisStore = connectRedis(session);\nconst client     = redis.createClient({\n    url: process.env.REDIS_URL,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASS\n});\n\nclient.on('ready', () => {\n    redisLogger(chalk.bgBlue(`Redis connection open to ${process.env.REDIS_URL}`));\n});\n\nclient.on('error', (err) => {\n    redisLogger(chalk.bgYellow(`Redis connection encountered error: ${err}`));\n});\n\nclient.on('end', () => {\n    redisLogger(chalk.bgYellow('Redis connection disconnected'));\n});\n\nprocess.on('SIGINT', () => {\n    client.quit();\n    redisLogger(chalk.bgRed('Redis connection closed due to application termination'));\n});\n\nmodule.exports = session({\n    store: new RedisStore({\n        client: client\n    }),\n    secret: process.env.SESSION_SECRET,\n    resave: true,\n    saveUninitialized: false\n})"]}